//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class UtensilCameraPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="SWIGRegisterExceptionCallbacks_UtensilCamera")]
    public static extern void SWIGRegisterExceptionCallbacks_UtensilCamera(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_UtensilCamera")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_UtensilCamera(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_UtensilCamera(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_UtensilCamera(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(UtensilCameraPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(UtensilCameraPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="SWIGRegisterStringCallback_UtensilCamera")]
    public static extern void SWIGRegisterStringCallback_UtensilCamera(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_UtensilCamera(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static UtensilCameraPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_delete_IWPOCTCamera")]
  public static extern void delete_IWPOCTCamera(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_IsInitialized")]
  public static extern bool IWPOCTCamera_IsInitialized(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_IsOpened")]
  public static extern bool IWPOCTCamera_IsOpened(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_AreParametersSet")]
  public static extern bool IWPOCTCamera_AreParametersSet(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_IsAcquiring")]
  public static extern bool IWPOCTCamera_IsAcquiring(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetScanWidth")]
  public static extern int IWPOCTCamera_GetScanWidth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetScanHeight")]
  public static extern int IWPOCTCamera_GetScanHeight(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetScanWidthAndHeight")]
  public static extern bool IWPOCTCamera_GetScanWidthAndHeight(global::System.Runtime.InteropServices.HandleRef jarg1, ref int jarg2, ref int jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetCameraWidth")]
  public static extern int IWPOCTCamera_GetCameraWidth(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetNumCameras")]
  public static extern int IWPOCTCamera_GetNumCameras(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetCameraID")]
  public static extern string IWPOCTCamera_GetCameraID(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetNumBuffers")]
  public static extern int IWPOCTCamera_GetNumBuffers(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetLinesLost")]
  public static extern int IWPOCTCamera_GetLinesLost(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetTriggersMissed")]
  public static extern int IWPOCTCamera_GetTriggersMissed(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetLinePeriod")]
  public static extern float IWPOCTCamera_GetLinePeriod(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetExposureTime")]
  public static extern float IWPOCTCamera_GetExposureTime(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetTriggerMode")]
  public static extern int IWPOCTCamera_GetTriggerMode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetCameraType")]
  public static extern int IWPOCTCamera_GetCameraType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetNumBitsInPixel")]
  public static extern int IWPOCTCamera_GetNumBitsInPixel(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetNumBytesInPixel")]
  public static extern int IWPOCTCamera_GetNumBytesInPixel(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetAcquisitionTimeout")]
  public static extern int IWPOCTCamera_GetAcquisitionTimeout(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetResourceIndex")]
  public static extern int IWPOCTCamera_GetResourceIndex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetCameraFileName")]
  public static extern string IWPOCTCamera_GetCameraFileName(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetScanHeight")]
  public static extern bool IWPOCTCamera_SetScanHeight(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetNumBuffers")]
  public static extern bool IWPOCTCamera_SetNumBuffers(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetLinePeriod")]
  public static extern bool IWPOCTCamera_SetLinePeriod(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetExposureTime")]
  public static extern bool IWPOCTCamera_SetExposureTime(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetTriggerMode")]
  public static extern bool IWPOCTCamera_SetTriggerMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetCameraFileName")]
  public static extern bool IWPOCTCamera_SetCameraFileName(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetAcquisitionTimeout")]
  public static extern bool IWPOCTCamera_SetAcquisitionTimeout(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetResourceIndex")]
  public static extern bool IWPOCTCamera_SetResourceIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_InitializeLibrary")]
  public static extern bool IWPOCTCamera_InitializeLibrary(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_ShutDownLibrary")]
  public static extern bool IWPOCTCamera_ShutDownLibrary(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_Open__SWIG_0")]
  public static extern bool IWPOCTCamera_Open__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_Open__SWIG_1")]
  public static extern bool IWPOCTCamera_Open__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_Close")]
  public static extern bool IWPOCTCamera_Close(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_ReadParameter")]
  public static extern bool IWPOCTCamera_ReadParameter(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, ref uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_WriteParameter")]
  public static extern bool IWPOCTCamera_WriteParameter(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetParameters__SWIG_0")]
  public static extern bool IWPOCTCamera_SetParameters__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_SetParameters__SWIG_1")]
  public static extern bool IWPOCTCamera_SetParameters__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_StartAcquiring")]
  public static extern bool IWPOCTCamera_StartAcquiring(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_StopAcquiring")]
  public static extern bool IWPOCTCamera_StopAcquiring(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetBuffer")]
  public static extern bool IWPOCTCamera_GetBuffer(global::System.Runtime.InteropServices.HandleRef jarg1, ref global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetBuffer2")]
  public static extern bool IWPOCTCamera_GetBuffer2(global::System.Runtime.InteropServices.HandleRef jarg1, ref global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetBufferCopy")]
  public static extern bool IWPOCTCamera_GetBufferCopy(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetBufferAndIndex")]
  public static extern bool IWPOCTCamera_GetBufferAndIndex(global::System.Runtime.InteropServices.HandleRef jarg1, ref global::System.IntPtr jarg2, ref global::System.IntPtr jarg3, ref ulong jarg4);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetBufferAndIndex2")]
  public static extern bool IWPOCTCamera_GetBufferAndIndex2(global::System.Runtime.InteropServices.HandleRef jarg1, ref global::System.IntPtr jarg2, ref global::System.IntPtr jarg3, ref ulong jarg4);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_AbortGetBuffer")]
  public static extern bool IWPOCTCamera_AbortGetBuffer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_RequeueBuffer__SWIG_0")]
  public static extern bool IWPOCTCamera_RequeueBuffer__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_RequeueBuffer__SWIG_1")]
  public static extern bool IWPOCTCamera_RequeueBuffer__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, ref int jarg2);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_FlushBuffers")]
  public static extern bool IWPOCTCamera_FlushBuffers(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_ResetDevice")]
  public static extern bool IWPOCTCamera_ResetDevice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_AcquireFramesWriteToDisk")]
  public static extern bool IWPOCTCamera_AcquireFramesWriteToDisk(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_AcquireWriteFramesToMemory__SWIG_0")]
  public static extern bool IWPOCTCamera_AcquireWriteFramesToMemory__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, ref global::System.IntPtr jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_AcquireWriteFramesToMemory__SWIG_1")]
  public static extern bool IWPOCTCamera_AcquireWriteFramesToMemory__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetLastError")]
  public static extern int IWPOCTCamera_GetLastError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint = "GetLastAttemptError")]
  public static extern int IWPOCTCamera_GetLastAttemptError();

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetCurrentState")]
  public static extern int IWPOCTCamera_GetCurrentState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_GetOCTCamera")]
  public static extern global::System.IntPtr IWPOCTCamera_GetOCTCamera(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_DestroyOCTCamera__SWIG_0")]
  public static extern bool IWPOCTCamera_DestroyOCTCamera__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("UtensilCamera", EntryPoint="CSharp_IWPOCTCamera_DestroyOCTCamera__SWIG_1")]
  public static extern bool IWPOCTCamera_DestroyOCTCamera__SWIG_1();
}
